{"version":3,"sources":["utils/axiosApi.js","hooks/GetApiRequest.js","components/Users/UserLink.js","components/Posts/Post.js","containers/Posts/PostList.js","contexts/AuthContext.js","containers/Posts/PostCreate.js","containers/Posts/PostDetail.js","containers/Posts/PostEdit.js","containers/Auth/Login.js","containers/Auth/Register.js","containers/Users/UserPosts.js","containers/Users/UserDetail.js","containers/Users/UserEditBasic.js","containers/Users/UserEditAvatar.js","containers/Users/UserCredentials.js","containers/Users/UserAdminSettings.js","containers/Users/UserEdit.js","containers/Auth/Logout.js","containers/App/AppNavbar.js","containers/Admin/AdminPosts.js","containers/Admin/AdminUsers.js","containers/Auth/EmailVerify.js","containers/Auth/VerifyInstructions.js","containers/Auth/ForgotPassword.js","containers/Auth/ResetPassword.js","containers/App/App.js","hooks/LoginHook.js","index.js"],"names":["axiosInstance","axios","create","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","GetApiRequest","url","useState","data","setData","isLoaded","setIsLoaded","error","setError","useEffect","get","then","response","catch","UserLink","props","to","user","Post","Card","Body","Title","id","title","Text","text","PostList","message","Container","Row","Col","className","md","map","item","Spinner","animation","role","AuthContext","React","createContext","PostCreate","history","useHistory","setTitle","description","setDescription","confirm","setConfirm","useContext","authState","setAuthState","userState","setUserState","push","Form","onSubmit","event","preventDefault","post","status","alert","Group","Label","Control","value","onChange","target","as","rows","Check","type","checked","label","Button","PostDetail","postId","useParams","String","ListGroup","variant","Item","sm","created_date","username","privilege","PostEdit","isMounted","useRef","current","refreshState","put","onClick","delete","Login","email","setEmail","password","setPassword","result","defaults","setItem","Register","setUsername","loading","setLoading","UserPosts","Header","length","UserDetail","userName","src","avatar","URL","style","width","height","padding","name","xs","bio","birthday","gender","private","UserEditBasic","setAvatar","setBio","setBirthday","setGender","setName","isPrivate","setPrivate","placeholder","removeItem","UserEditAvatar","preview","setPreview","form_data","FormData","append","editData","File","custom","files","createObjectURL","Image","UserCredentials","UserAdminSettingsBasic","isAdmin","setAdmin","UserEdit","editType","setEditType","Nav","defaultActiveKey","Link","param","renderSwitch","Logout","NavDropdown","evt","AppNavbar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","AdminPosts","EmailVerify","challenge","VerifyInstructions","ForgotPassword","success","setSuccess","ResetPassword","App","console","log","LoginHook","Provider","basename","exact","path","AdminRoutes","PostRoutes","UserRoutes","match","useRouteMatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fad906aa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n  timeout: 10000,\r\n  headers: {\r\n    Authorization: \"JWT \" + localStorage.getItem(\"access_token\"),\r\n    \"Content-Type\": \"application/json\",\r\n    accept: \"application/json\",\r\n  },\r\n});\r\nexport default axiosInstance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axiosInstance from \"../utils/axiosApi\";\r\n\r\nexport default function GetApiRequest(url) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .get(url)\r\n        .then((response) => {\r\n          \r\n          setData(response.data);\r\n          setIsLoaded(true);\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { error, isLoaded, data };\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function UserLink(props) {\r\n  return <Link to={\"/user/\" + props.user}>{props.user}</Link>;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport UserLink from \"../Users/UserLink\";\r\n\r\nexport default function Post(props) {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <Link to={\"/post/\" + props.data.id}>\r\n            {props.data.title + \" \" + props.data.id}\r\n          </Link>\r\n        </Card.Title>\r\n        <Card.Text>{props.data.text}</Card.Text>\r\n        <Card.Text>\r\n          <i>Made By: <UserLink user={props.data.user}/></i>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport Post from \"../../components/Posts/Post\";\r\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\r\n\r\nexport default function PostList() {\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/post\");\r\n\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // render a Post for each item\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Posts</h1>\r\n              {data.map((item) => (\r\n                <Row className=\"justify-content-center\">\r\n                  <Col>\r\n                    <Post data={item} />\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nconst AuthContext = React.createContext();\r\nexport default AuthContext;","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Container, Row, Card, Col, Form, Button } from \"react-bootstrap\";\r\n\r\nexport default function PostCreate() {\r\n  let history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (title == \"\" || description == \"\" || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/post\", {\r\n          title: title,\r\n          text: description,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  // redirect if not authenticated\r\n  useEffect(() => {\r\n    if (authState == false) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Create Post</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Title</Form.Label>\r\n                      <Form.Control\r\n                        value={title}\r\n                        onChange={(event) => setTitle(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"9\"\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\nexport default function PostDetail(props) {\r\n  let { postId } = useParams();\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/post/\" + String(postId));\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // display information about a post\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Viewing Post {data.id}</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Title:</b>\r\n                        </Col>\r\n                        <Col>{data.title}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Description:</b>\r\n                        </Col>\r\n                        <Col>{data.text}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Created at:</b>\r\n                        </Col>\r\n                        <Col>{data.created_date}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Author:</b>\r\n                        </Col>\r\n                        <Col>\r\n                          <UserLink user={data.user} />\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card.Body>\r\n              </Card>\r\n              <br />\r\n              {authState &&\r\n              userState != null &&\r\n              (userState.username == data.user || userState.privilege > 1) ? (\r\n                // if logged in link to the edit page\r\n                <Row>\r\n                  <Col sm=\"2\">\r\n                    <Link to={\"/post/\" + String(postId) + \"/edit\"}>\r\n                      <Button>Edit</Button>\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\nexport default function PostEdit(props) {\r\n  let { postId } = useParams();\r\n  let history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/post/\" + String(postId));\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      if (data.user != userState.username && userState.privilege <= 1) {\r\n        history.push(\"/\");\r\n      }\r\n      setTitle(data.title);\r\n      setDescription(data.text);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles edit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (title == \"\" || description == \"\" || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const editData = () => {\r\n      axiosInstance\r\n        .put(\"/post/\" + String(data.id), {\r\n          title: title,\r\n          text: description,\r\n        })\r\n        .then((response) => {\r\n          // setIsLoaded(true);\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/post/\" + data.id);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // handles delete\r\n  const handleDelete = () => {\r\n    const deleteData = () => {\r\n      axiosInstance\r\n        .delete(\"/post/\" + String(data.id))\r\n        .then((response) => {\r\n          // setIsLoaded(true);\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Edit Post {data.id}</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Title</Form.Label>\r\n                      <Form.Control\r\n                        value={title}\r\n                        onChange={(event) => setTitle(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"9\"\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                  <Button variant=\"warning\" onClick={refreshState}>\r\n                    Reset\r\n                  </Button>\r\n                  <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Delete\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Container, Row, Card, Col, Form, Button } from \"react-bootstrap\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\n\r\nexport default function Login() {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { authState, setAuthState } = React.useContext(AuthContext);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (email == \"\" || password == \"\") {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/token\", {\r\n          email: email,\r\n          password: password,\r\n        })\r\n        .then((result) => {\r\n          if (result.status == 202) {\r\n            axiosInstance.defaults.headers[\"Authorization\"] =\r\n              \"JWT \" + result.data;\r\n            localStorage.setItem(\"access_token\", result.data);\r\n\r\n            // set global authentication state after a login succeeds, then redirect\r\n            setAuthState(true);\r\n            history.push(\"/\");\r\n          } else {\r\n            alert(result);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status == 401) {\r\n            history.push(\"/verify/instructions\");\r\n          } else {\r\n            alert(error);\r\n          }\r\n        });\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Login</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Link to=\"/forgotpassword\">Forgot Password</Link>\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport Feedback from \"react-bootstrap/esm/Feedback\";\r\n\r\nexport default function Register(props) {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (\r\n      email == \"\" ||\r\n      password == \"\" ||\r\n      password != confirm ||\r\n      username == \"\"\r\n    ) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/user\", {\r\n          username: username,\r\n          email: email,\r\n          password: password,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n            history.push(\"/verify/instructions\");\r\n          } else {\r\n            alert(response);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n    setLoading(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Register</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Username</Form.Label>\r\n                      <Form.Control\r\n                        value={username}\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Confirm Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={confirm}\r\n                        onChange={(event) => setConfirm(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                    ) : (\r\n                      <Button type=\"submit\">Submit</Button>\r\n                    )}\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport Post from \"../../components/Posts/Post\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Container, Row, Col, Spinner, Card, ListGroup } from \"react-bootstrap\";\r\n\r\nexport default function UserPosts(props) {\r\n  const user = props.user;\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/post/user/\" + user);\r\n\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // render a Post for each item\r\n  return (\r\n    <Card>\r\n      <Card.Header>Posts by {user}</Card.Header>\r\n      <Card.Body>\r\n        {data.length == 0 ? (\r\n          <h4>This user hasn't made any posts yet...</h4>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col sm=\"1\">\r\n                  <b>Id</b>\r\n                </Col>\r\n                <Col sm=\"7\">\r\n                  <b>Title</b>\r\n                </Col>\r\n                <Col sm=\"4\">\r\n                  <b>Date</b>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            {data.map((item) => (\r\n              <ListGroup.Item>\r\n                <Link to={\"/post/\" + item.id}>\r\n                  <Row>\r\n                    <Col sm=\"1\">{item.id}</Col>\r\n                    <Col sm=\"7\">{item.title}</Col>\r\n                    <Col sm=\"4\">{item.created_date}</Col>\r\n                  </Row>\r\n                </Link>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport UserPosts from \"./UserPosts\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n  Button,\r\n  Spinner,\r\n  Jumbotron,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport default function UserDetail(props) {\r\n  let { userName } = useParams();\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user/\" + String(userName));\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // display information about a post\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md=\"8\">\r\n          <Row>\r\n            <Col md=\"auto\">\r\n              <img\r\n                src={\r\n                  data.avatar == null\r\n                    ? \"/default_avatar.jpg\"\r\n                    : new URL(\r\n                        data.avatar\r\n                      )\r\n                }\r\n                style={{\r\n                  width: \"120px\",\r\n                  height: \"120px\",\r\n                  padding: \"0px\",\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"auto\">\r\n              <h1>{data.username}</h1>\r\n              <p>{data.name}</p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card>\r\n            <Card.Header>\r\n              <Row className=\"justify-content-between\">\r\n                <Col xs=\"auto\">Information</Col>\r\n                <Col xs=\"auto\">\r\n                  {authState &&\r\n                  userState != null &&\r\n                  (data.username == userState.username ||\r\n                    userState.privilege > 1) ? (\r\n                    <Link to={\"/user/\" + userName + \"/edit\"}>\r\n                      <Button>Edit</Button>\r\n                    </Link>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Username:</b>\r\n                    </Col>\r\n                    <Col>{data.username}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Name:</b>\r\n                    </Col>\r\n                    <Col>{data.name}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Bio:</b>\r\n                    </Col>\r\n                    <Col>{data.bio}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Birthday:</b>\r\n                    </Col>\r\n                    <Col>{data.birthday}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Gender:</b>\r\n                    </Col>\r\n                    <Col>{data.gender}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Card>\r\n          <br />\r\n\r\n          {data.private ? (\r\n            <h1>This account's posts are private</h1>\r\n          ) : (\r\n            <UserPosts user={data.username} />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserEditBasic(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isPrivate, setPrivate] = useState(false);\r\n\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user/\" + String(userName));\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      setAvatar(data.avatar);\r\n      setBio(data.bio);\r\n      setBirthday(data.birthday);\r\n      setGender(data.gender);\r\n      setName(data.name);\r\n      setPrivate(data.private);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles edit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (bio == \"\" || name == \"\" || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n    const editData = () => {\r\n      axiosInstance\r\n        .put(\"/user/\" + userName, {\r\n          username: userName,\r\n          name: name,\r\n          bio: bio,\r\n          gender: gender,\r\n          private: isPrivate,\r\n          birthday: String(birthday),\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/user/\" + data.username);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // handles delete\r\n  const handleDelete = () => {\r\n    const deleteData = () => {\r\n      axiosInstance\r\n        .delete(\"/user/\" + userName)\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            localStorage.removeItem(\"access_token\");\r\n            setAuthState(false);\r\n            setUserState(null);\r\n            alert(\"account deleted\");\r\n            history.push(\"/\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Profile</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={(event) => handleSubmit(event)}>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Label>Bio</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"9\"\r\n              value={bio}\r\n              onChange={(event) => setBio(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Label>Gender</Form.Label>\r\n            <Form.Control\r\n              value={gender}\r\n              onChange={(event) => setGender(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              value={isPrivate}\r\n              checked={isPrivate}\r\n              onChange={(event) => setPrivate(!isPrivate)}\r\n              label={\"Private\"}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Label>Birthday</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              placeholder=\"Date of Birth\"\r\n              value={birthday}\r\n              onChange={(event) => setBirthday(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            value={confirm}\r\n            checked={confirm}\r\n            onChange={(event) => setConfirm(!confirm)}\r\n            label={\"Confirm\"}\r\n          />\r\n          <br />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n        <Button variant=\"warning\" onClick={refreshState}>\r\n          Clear Changes\r\n        </Button>\r\n        <br />\r\n        <Button variant=\"danger\" onClick={handleDelete}>\r\n          Delete Account\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserEditAvatar(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [preview, setPreview] = useState(\"\");\r\n\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user/\" + String(userName));\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  //   used to refresh state\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      setAvatar(data.avatar);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles upload\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (avatar == \"\") {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n    const editData = () => {\r\n      let form_data = new FormData();\r\n      form_data.append(\"file\", avatar);\r\n      form_data.append(\"filename\", avatar.name);\r\n      axiosInstance\r\n        .post(\"/upload/avatar/\" + userName, form_data)\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/user/\" + data.username);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Avatar</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={(event) => handleSubmit(event)}>\r\n          <Form>\r\n            <Form.File\r\n              id=\"custom-file\"\r\n              label=\"Upload a new avatar\"\r\n              custom\r\n              onChange={(event) => {\r\n                setAvatar(event.target.files[0]);\r\n                setPreview(URL.createObjectURL(event.target.files[0]));\r\n              }}\r\n            />\r\n          </Form>\r\n          <Image\r\n            src={preview}\r\n            style={{\r\n              width: \"120px\",\r\n              height: \"120px\",\r\n              padding: \"0px\",\r\n            }}\r\n          />\r\n          <br />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n  ListGroup\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserCredentials(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n\r\n  const { data, error, isLoaded } = GetApiRequest(\"/auth/user/\"+userName);\r\n  //   const isMounted = useRef(1);\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Credentials</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item>\r\n            <Row>\r\n              <Col sm=\"3\">\r\n                <b>Username:</b>\r\n              </Col>\r\n              <Col>{data.username}</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n\r\n          <ListGroup.Item>\r\n            <Row>\r\n              <Col sm=\"3\">\r\n                <b>Email:</b>\r\n              </Col>\r\n              <Col>{data.email}</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            <Row>\r\n              <Col sm=\"3\">\r\n                <b>Privilege:</b>\r\n              </Col>\r\n              <Col>{ + data.privilege}</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n        <Link to=\"/forgotpassword\">Reset Password</Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserAdminSettingsBasic(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const [isAdmin, setAdmin] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/auth/user/\" + userName);\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      setAdmin(data.privilege > 1);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles edit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const editData = () => {\r\n      axiosInstance\r\n        .put(\"auth/user/privilege/\" + userName, {\r\n          privilege: isAdmin ? 2 : 1,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/user/\" + data.username);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Profile</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={(event) => handleSubmit(event)}>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            value={isAdmin}\r\n            checked={isAdmin}\r\n            onChange={(event) => setAdmin(!isAdmin)}\r\n            label={\"Administrator\"}\r\n          />\r\n          <br />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n        <Button variant=\"warning\" onClick={refreshState}>\r\n          Clear Changes\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport UserEditBasic from \"./UserEditBasic\";\r\nimport UserEditAvatar from \"./UserEditAvatar\";\r\nimport UserCredentials from \"./UserCredentials\";\r\nimport UserAdminSettings from \"./UserAdminSettings\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  ListGroup,\r\n  Button,\r\n  Spinner,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function UserEdit(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const { authState, userState } = React.useContext(AuthContext);\r\n\r\n  let [editType, setEditType] = useState(1);\r\n\r\n  function renderSwitch(param) {\r\n    switch (editType) {\r\n      case 1:\r\n        return <UserEditBasic />;\r\n      case 2:\r\n        return <UserCredentials />;\r\n      case 3:\r\n        return <UserEditAvatar />;\r\n      case 4:\r\n        return <UserAdminSettings />;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !authState ||\r\n      userState == null ||\r\n      (userName != userState.username && userState.privilege <= 1)\r\n    ) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <Row>\r\n                <Col md=\"2\">\r\n                  <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                    <Nav.Link onClick={() => setEditType(1)}>Profile</Nav.Link>\r\n                    <Nav.Link onClick={() => setEditType(2)}>\r\n                      Credentials\r\n                    </Nav.Link>\r\n                    <Nav.Link onClick={() => setEditType(3)}>Avatar</Nav.Link>\r\n                    {userState != null && userState.privilege > 1 ? (\r\n                      <Nav.Link onClick={() => setEditType(4)}>Admin</Nav.Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Nav>\r\n                </Col>\r\n                <Col>{renderSwitch(editType)}</Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {NavDropdown} from \"react-bootstrap\";\r\nexport default function Logout() {\r\n  const history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } = React.useContext(\r\n    AuthContext\r\n  );\r\n  const handleSubmit = (evt) => {\r\n    const logout = () => {\r\n      axiosInstance\r\n        .delete(\"/auth/token\")\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            // remode local token and reset auth contexts if logout succeeds\r\n            localStorage.removeItem(\"access_token\");\r\n            setAuthState(false);\r\n            setUserState(null);\r\n            alert(\"logged out\");\r\n            history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    logout();\r\n  };\r\n\r\n  return <NavDropdown.Item onClick={handleSubmit}>Logout</NavDropdown.Item>;\r\n}\r\n","// navbar component\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\nimport Logout from \"../Auth/Logout\";\r\n\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\n\r\nexport default function AppNavbar() {\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" style={{ padding: \"5px\" }}>\r\n      <Navbar.Brand href=\"/\">Web Template</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse\r\n        id=\"responsive-navbar-nav\"\r\n        className=\"justify-content-between\"\r\n      >\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link>\r\n            <Link to=\"/\">Home</Link>\r\n          </Nav.Link>\r\n          {/* check if user is logged in, if so allow them to create a new post */}\r\n          {authState && userState != null ? (\r\n            <Nav.Link>\r\n              <Link to=\"/create\">Create</Link>\r\n            </Nav.Link>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Nav>\r\n        <Nav>\r\n          {/* login controls */}\r\n          {authState && userState != null ? (\r\n            <NavDropdown\r\n              title={userState.username}\r\n              id=\"collasible-nav-dropdown\"\r\n            >\r\n              <NavDropdown.Item>\r\n                <UserLink user={userState.username} />\r\n              </NavDropdown.Item>\r\n\r\n              {/* admin controls */}\r\n              {userState.privilege > 1 ? (\r\n                <Fragment>\r\n                  <NavDropdown.Item>\r\n                    <Link to=\"/admin/posts\">Posts</Link>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item>\r\n                    <Link to=\"/admin/users\">Users</Link>\r\n                  </NavDropdown.Item>\r\n                </Fragment>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Logout />\r\n            </NavDropdown>\r\n          ) : (\r\n            <Fragment>\r\n              <Nav.Link>\r\n                <Link to=\"/login\">Login</Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link to=\"/register\">Register</Link>\r\n              </Nav.Link>\r\n            </Fragment>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","// admin only list of all posts\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner, ListGroup } from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\n\r\nexport default function AdminPosts(props) {\r\n  let history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const isMounted = useRef(1);\r\n\r\n  // get posts from api\r\n  const { data, error, isLoaded } = GetApiRequest(\"/post\");\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Admin Posts</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  {data.length == 0 ? (\r\n                    <h4>This user hasn't made any posts yet...</h4>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col sm=\"1\">\r\n                            <b>Id</b>\r\n                          </Col>\r\n                          <Col sm=\"4\">\r\n                            <b>Title</b>\r\n                          </Col>\r\n                          <Col sm=\"5\">\r\n                            <b>Date</b>\r\n                          </Col>\r\n                          <Col sm=\"2\">\r\n                            <b>User</b>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      {data.map((item) => (\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col sm=\"1\">{item.id}</Col>\r\n                            <Col sm=\"4\">\r\n                              <Link to={\"/post/\" + item.id}>{item.title}</Link>\r\n                            </Col>\r\n                            <Col sm=\"5\">{item.created_date}</Col>\r\n                            <Col sm=\"2\">\r\n                              <UserLink user={item.user} />\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// admin only list of all registered users\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner, ListGroup } from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\n\r\nexport default function AdminPosts(props) {\r\n  let history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const isMounted = useRef(1);\r\n\r\n  // get all users from api\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user\");\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n  \r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Admin Users</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  {data.length == 0 ? (\r\n                    <h4>This user hasn't made any posts yet...</h4>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col sm=\"3\">\r\n                            <b>Username</b>\r\n                          </Col>\r\n                          <Col sm=\"3\">\r\n                            <b>Name</b>\r\n                          </Col>\r\n                          <Col sm=\"3\">\r\n                            <b>Birthday</b>\r\n                          </Col>\r\n                          <Col sm=\"3\">\r\n                            <b>Gender</b>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      {data.map((item) => (\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col sm=\"3\">\r\n                              <UserLink user={item.username} />\r\n                            </Col>\r\n                            <Col sm=\"3\">{item.name}</Col>\r\n                            <Col sm=\"3\">{item.gender}</Col>\r\n                            <Col sm=\"3\">{item.birthday}</Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// the page linked in a verification email\r\nimport React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Spinner,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function EmailVerify(props) {\r\n  let { challenge } = useParams();\r\n\r\n  // verify email with the current route\r\n  const { data, error, isLoaded } = GetApiRequest(\"/auth/verify/\" + challenge);\r\n\r\n  if (error !== null) {\r\n    return <div>Verification failed: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Success</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  Your email has been sucesfully verified, you may log in\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner } from \"react-bootstrap\";\r\nexport default function VerifyInstructions() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Verification Required</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  A verification link has been sent to the email you signed up\r\n                  with, check your inbox.\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// used to send a password reset email\r\nimport React, { useState } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function ForgotPassword() {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (email == \"\") {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/requestreset\", {\r\n          email: email,\r\n        })\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            setSuccess(true);\r\n          } else {\r\n            alert(result);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status == 401) {\r\n            history.push(\"/verify/instructions\");\r\n          } else {\r\n            alert(error);\r\n          }\r\n          setLoading(false);\r\n        });\r\n    };\r\n    fetchData();\r\n    setLoading(true);\r\n  };\r\n\r\n  if (success) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md=\"8\">\r\n                <h1>Reset Request Sent</h1>\r\n                <Card>\r\n                  <Card.Body>\r\n                    A password reset link has been sent to the email you signed\r\n                    up with, check your inbox.\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Forgot Password</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Enter your email</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                    ) : (\r\n                      <Button type=\"submit\">Submit</Button>\r\n                    )}\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function ResetPassword(props) {\r\n  let { challenge } = useParams();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (password == \"\" || password != confirm) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/reset/\" + challenge, {\r\n          password: password,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            setSuccess(true);\r\n          } else {\r\n            alert(response);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n          setLoading(false);\r\n        });\r\n    };\r\n    fetchData();\r\n    setLoading(true);\r\n  };\r\n  if (success) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md=\"8\">\r\n                <h1>Reset Succeeded</h1>\r\n                <Card>\r\n                  <Card.Body>\r\n                    Your Password has been changed, you may now log in.\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Reset Password</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Confirm Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={confirm}\r\n                        onChange={(event) => setConfirm(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                    ) : (\r\n                      <Button type=\"submit\">Submit</Button>\r\n                    )}\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n\r\nimport PostList from \"../Posts/PostList\";\r\nimport PostCreate from \"../Posts/PostCreate\";\r\nimport PostDetail from \"../Posts/PostDetail\";\r\nimport PostEdit from \"../Posts/PostEdit\";\r\nimport Login from \"../Auth/Login\";\r\nimport Register from \"../Auth/Register\";\r\nimport UserDetail from \"../Users/UserDetail\";\r\nimport UserEdit from \"../Users/UserEdit\";\r\nimport AppNavbar from \"./AppNavbar\";\r\nimport LoginHook from \"../../hooks/LoginHook\";\r\nimport AdminPosts from \"../Admin/AdminPosts\";\r\nimport AdminUsers from \"../Admin/AdminUsers\";\r\nimport EmailVerify from \"../Auth/EmailVerify\";\r\nimport VerifyInstructions from \"../Auth/VerifyInstructions\";\r\n\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport ForgotPassword from \"../Auth/ForgotPassword\";\r\nimport ResetPassword from \"../Auth/ResetPassword\";\r\n\r\nexport default function App() {\r\n  const [authState, setAuthState] = useState(false);\r\n  const [userState, setUserState] = useState(null);\r\n\r\n  // check if a token exists in memory, if so log in\r\n  LoginHook(authState, setAuthState, userState, setUserState);\r\n\r\n  return (\r\n    // set up contexts\r\n    <AuthContext.Provider\r\n      value={{ authState, setAuthState, userState, setUserState }}\r\n    >\r\n      {/* routes */}\r\n      <Router basename=\"/\">\r\n        <AppNavbar />\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <PostList />\r\n            </Route>\r\n            <Route path=\"/reset/:challenge\">\r\n              <ResetPassword />\r\n            </Route>\r\n            <Route path=\"/verify/instructions\">\r\n              <VerifyInstructions />\r\n            </Route>\r\n            <Route path=\"/verify/confirm/:challenge\">\r\n              <EmailVerify />\r\n            </Route>\r\n            <Route path=\"/admin\">\r\n              <AdminRoutes />\r\n            </Route>\r\n            <Route path=\"/post\">\r\n              <PostRoutes />\r\n            </Route>\r\n            <Route path=\"/user\">\r\n              <UserRoutes />\r\n            </Route>\r\n            <Route path=\"/create\">\r\n              <PostCreate />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <Register />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/forgotpassword\">\r\n              <ForgotPassword />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n// sub routes for posts\r\nfunction PostRoutes() {\r\n  let match = useRouteMatch();\r\n  let { id } = useParams();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/:postId/edit`}>\r\n        <PostEdit />\r\n      </Route>\r\n      <Route path={`${match.path}/:postId`}>\r\n        <PostDetail />\r\n      </Route>\r\n\r\n      <Route path={match.path}></Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n// sub routes for users\r\nfunction UserRoutes() {\r\n  let match = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/:userName/edit`}>\r\n        <UserEdit />\r\n      </Route>\r\n      <Route path={`${match.path}/:userName`}>\r\n        <UserDetail />\r\n      </Route>\r\n      <Route path={match.path}>g</Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n// sub routes for admins\r\nfunction AdminRoutes() {\r\n  let match = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/posts`}>\r\n        <AdminPosts />\r\n      </Route>\r\n      <Route path={`${match.path}/users`}>\r\n        <AdminUsers />\r\n      </Route>\r\n      <Route path={match.path}>g</Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axiosInstance from \"../utils/axiosApi\";\r\n\r\nexport default function TryLogin(authState, setAuthState, userState, setUserState) {\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .get(\"/auth/user\")\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            setAuthState(true);\r\n            setUserState(response.data);\r\n            console.log(response.data)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n        });\r\n    };\r\n    if (localStorage.getItem(\"access_token\") === null || (authState == true && userState!=null)) {\r\n      return;\r\n    }\r\n    fetchData();\r\n  }, [authState, userState]);\r\n\r\n  return [error];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/index.css';\r\nimport App from './containers/App/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}